usage: git flow <subcommand>

Available subcommands are:
   init      Initialize a new git repo with support for the branching model.
   feature   Manage your feature branches.
   bugfix    Manage your bugfix branches.
   release   Manage your release branches.
   hotfix    Manage your hotfix branches.
   support   Manage your support branches.
   version   Shows version information.
   config    Manage your git-flow configuration.
   log       Show log deviating from base branch.

Try 'git flow <subcommand> help' for details.

usage: git flow init

    Initialize a new git repo with support for the branching model.

    For more specific help type the command followed by --help


usage: git flow feature [list]
   or: git flow feature start
   or: git flow feature finish
   or: git flow feature publish
   or: git flow feature track
   or: git flow feature diff
   or: git flow feature rebase
   or: git flow feature checkout
   or: git flow feature pull
   or: git flow feature delete

    Manage your feature branches.

    For more specific help type the command followed by --help


usage: git flow feature start [-h] [-F] <name> [<base>]

    Start new feature <name>, optionally basing it on <base> instead of <develop>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -F, --[no]fetch       Fetch from origin before performing local operation


usage: git flow feature finish [-h] [-F] [-r] [-p] [-k] [-D] [-S] [--no-ff] <name|nameprefix>

    Finish feature <name>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -F, --[no]fetch       Fetch from origin before performing finish
    -r, --[no]rebase      Rebase before merging
    -p, --[no]preserve-merges
                          Preserve merges while rebasing
    --[no]push            Push to origin after performing finish
    -k, --[no]keep        Keep branch after performing finish
    --keepremote          Keep the remote branch
    --keeplocal           Keep the local branch
    -D, --[no]force_delete
                          Force delete feature branch after finish
    -S, --[no]squash      Squash feature during merge
    --no-ff               Never fast-forward during the merge


usage: git flow feature publish [-h] [<name>]

    Publish feature branch <name> on origin.
    When <name> is omitted the current branch is used, but only if it's a feature branch.

    -h, --help            Show this help
    --showcommands        Show git commands while executing them


usage: git flow feature track [-h] <name>

    Start tracking feature <name> that is shared on origin

    -h, --help            Show this help
    --showcommands        Show git commands while executing them


usage: git flow feature diff [-h] [<name|nameprefix>]

    Show all changes in <name> that are not in the base

    -h, --help            Show this help
    --showcommands        Show git commands while executing them


usage: git flow feature rebase [-h] [-i] [-p] [<name|nameprefix>]

    Rebase <name> on <base_branch>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -i, --[no]interactive
                          Do an interactive rebase
    -p, --[no]preserve-merges
                          Preserve merges


usage: git flow feature checkout [-h] [<name|nameprefix>]

    Switch to feature branch <name>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them


usage: git flow feature pull [-h] <remote> [<name>]

    Pull feature <name> from <remote>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them


usage: git flow feature delete [-h] [-f] [-r] <name>

    Delete a given feature branch

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -f, --[no]force       Force deletion
    -r, --[no]remote      Delete remote branch


usage: git flow bugfix [list]
   or: git flow bugfix start
   or: git flow bugfix finish
   or: git flow bugfix publish
   or: git flow bugfix track
   or: git flow bugfix diff
   or: git flow bugfix rebase
   or: git flow bugfix checkout
   or: git flow bugfix pull
   or: git flow bugfix delete

    Manage your bugfix branches.

    For more specific help type the command followed by --help


usage: git flow bugfix start [-h] [-F] <name> [<base>]

    Start new bugfix <name>, optionally basing it on <base> instead of <develop>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -F, --[no]fetch       Fetch from origin before performing local operation


usage: git flow bugfix finish [-h] [-F] [-r] [-p] [-k] [-D] [-S] [--no-ff] <name|nameprefix>

    Finish bugfix <name>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -F, --[no]fetch       Fetch from origin before performing finish
    -r, --[no]rebase      Rebase before merging
    -p, --[no]preserve-merges
                          Preserve merges while rebasing
    --[no]push            Push to origin after performing finish
    -k, --[no]keep        Keep branch after performing finish
    --keepremote          Keep the remote branch
    --keeplocal           Keep the local branch
    -D, --[no]force_delete
                          Force delete bugfix branch after finish
    -S, --[no]squash      Squash bugfix during merge
    --no-ff               Never fast-forward during the merge


usage: git flow bugfix publish [-h] [<name>]

    Publish bugfix branch <name> on origin.
    When <name> is omitted the current branch is used, but only if it's a bugfix branch.

    -h, --help            Show this help
    --showcommands        Show git commands while executing them


usage: git flow bugfix track [-h] <name>

    Start tracking bugfix <name> that is shared on origin

    -h, --help            Show this help
    --showcommands        Show git commands while executing them


usage: git flow bugfix diff [-h] [<name|nameprefix>]

    Show all changes in <name> that are not in the base

    -h, --help            Show this help
    --showcommands        Show git commands while executing them


usage: git flow bugfix rebase [-h] [-i] [-p] [<name|nameprefix>]

    Rebase <name> on <base_branch>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -i, --[no]interactive
                          Do an interactive rebase
    -p, --[no]preserve-merges
                          Preserve merges


usage: git flow bugfix checkout [-h] [<name|nameprefix>]

    Switch to bugfix branch <name>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them


usage: git flow bugfix pull [-h] <remote> [<name>]

    Pull bugfix <name> from <remote>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them


usage: git flow bugfix delete [-h] [-f] [-r] <name>

    Delete a given bugfix branch

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -f, --[no]force       Force deletion
    -r, --[no]remote      Delete remote branch


usage: git flow release [list]
   or: git flow release start
   or: git flow release finish
   or: git flow release publish
   or: git flow release track
   or: git flow release delete

    Manage your release branches.

    For more specific help type the command followed by --help


usage: git flow release start [options] <version> [<base>]

    Start a new release branch

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -F, --[no]fetch       Fetch from origin before performing finish
    -v, --verbose         Verbose (more) output


usage: git flow release finish [-h] [-F] [-s] [-u] [-m | -f] [-p] [-k] [-n] [-b] [-S] <version>


    Finish a release branch

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -F, --[no]fetch       Fetch from origin before performing finish
    -s, --sign            Sign the release tag cryptographically
    -u, --signingkey      Use the given GPG-key for the digital signature (implies -s)
    -m, --message         Use the given tag message
    -f, --[no]messagefile ...
                          Use the contents of the given file as a tag message
    -p, --[no]push        Push to origin after performing finish
    --[no]pushproduction  Push the production branch
    --[no]pushdevelop     Push the develop branch
    --[no]pushtag         Push the tag
    -k, --[no]keep        Keep branch after performing finish
    --[no]keepremote      Keep the remote branch
    --[no]keeplocal       Keep the local branch
    -D, --[no]force_delete
                          Force delete release branch after finish
    -n, --[no]tag         Don't tag this release
    -b, --[no]nobackmerge
                          Don't back-merge master, or tag if applicable, in develop
    -S, --[no]squash      Squash release during merge
    --[no]ff-master       Fast forward master branch if possible
    -T, --tagname         Use given tag name


usage: git flow release publish [-h] <name>

    Publish the release branch <name> on origin

    -h, --help            Show this help
    --showcommands        Show git commands while executing them


usage: git flow release track [-h] <name>

    Start tracking release <name> that is shared on origin

    -h, --help            Show this help
    --showcommands        Show git commands while executing them


usage: git flow release delete [-h] [-f] [-r] <name>

    Delete the given release branch

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -f, --[no]force       Force deletion
    -r, --[no]remote      Delete remote branch


usage: git flow hotfix [list]
   or: git flow hotfix start
   or: git flow hotfix finish
   or: git flow hotfix publish
   or: git flow hotfix delete

    Manage your hotfix branches.

    For more specific help type the command followed by --help


usage: git flow hotfix start [-h] [-F] <version> [<base>]

    Start new hotfix branch named <version>, optionally base it on <base> instead of the <master> branch

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -F, --[no]fetch       Fetch from origin before performing local operation


usage: git flow hotfix finish [-h] [-F] [-s] [-u] [-m | -f ] [-p] [-k] [-n] [-b] [-S] <version>

    Finish hotfix branch <version>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -F, --[no]fetch       Fetch from origin before performing finish
    -s, --[no]sign        Sign the release tag cryptographically
    -u, --[no]signingkey  Use the given GPG-key for the digital signature (implies -s)
    -m, --[no]message     Use the given tag message
    -f, --[no]messagefile ...
                          Use the contents of the given file as tag message
    -p, --[no]push        Push to origin after performing finish
    -k, --[no]keep        Keep branch after performing finish
    --[no]keepremote      Keep the remote branch
    --[no]keeplocal       Keep the local branch
    -D, --[no]force_delete
                          Force delete hotfix branch after finish
    -n, --[no]notag       Don't tag this hotfix
    -b, --[no]nobackmerge
                          Don't back-merge master, or tag if applicable, in develop
    -S, --[no]squash      Squash hotfix during merge
    -T, --tagname         Use given tag name


usage: git flow hotfix publish [-h] <version>

    Start sharing hotfix <name> on origin

    -h, --help            Show this help
    --showcommands        Show git commands while executing them


usage: git flow hotfix delete [-h] [-f] [-r] <name>

    Delete the given hotfix branch

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -f, --[no]force       Force deletion
    -r, --[no]remote      Delete remote branch


usage: git flow support [list]
   or: git flow support start

    Manage your support branches.

    For more specific help type the command followed by --help


usage: git flow support start [-h] [-F] <version> <base>

    Start a new support branch name <version> based on <base>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -F, --[no]fetch       Fetch from origin before performing finish


usage: git flow version

    Shows version information.

    For more specific help type the command followed by --help


usage: git flow config [list]
   or: git flow config set
   or: git flow config base

    Manage the git-flow configuration.

    For more specific help type the command followed by --help


usage: git flow config set <option> <value>

    Set the git-flow configuration option to the given value

    -h, --help            Show this help
    --local               Use repository config file
    --global              Use global config file
    --system              Use system config file
    --file ...            Use given config file


usage: git flow config base [<options>] <branch> [<base>]

    Set the given <base> for the given <branch>

    -h, --help            Show this help
    --get                 Get the base for the given branch (default behavior).
    --set                 Set the given base for the given branch.


usage: git flow log

    shows current branch log compared to develop
    'git help log' for arguments


